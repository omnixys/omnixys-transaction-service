name: Security
  # CURRENT_DATE: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.date || format('{0,date,yyyy-MM-dd}', github.run_started_at) }}

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  # actions: read

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/${{ secrets.SERVICE }}-service

jobs:
  dependency-check:
    name: "Security-Dependency-Check-${{ vars.CURRENT_DATE }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@75ba02d6183445fe0761d26e836bde58b1560600
        with:
          project: "omnixys-${{ secrets.SERVICE }}-service"
          path: './'
          format: 'HTML'

      - name: Upload Dependency Check report
        uses: actions/upload-artifact@v4
        with:
          name: Depcheck-report
          path: ./reports

  snyk:
    name: "Security-Snyk-Scan-${{ vars.CURRENT_DATE }}"
    strategy:
      matrix:
        java-version: [24]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@cdb760004ba9ea4d525f2e043745dfe85bb9077e
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Resolve Gradle Dependencies
        run: ./gradlew dependencies

      - name: Run Snyk Code Test
        run: snyk code test --sarif > snyk-code.sarif
        continue-on-error: true

      - name: Run Snyk Code Test JSON
        run:  snyk test --severity-threshold=high --json-file-output=snyk-report.json
        continue-on-error: true

      - name: Install snyk-to-html
        run: |
          npm install snyk-to-html -g

      - name: Generate HTML Report
        run: |
          snyk-to-html -i snyk-report.json -o snyk-report.html
          mkdir -p reports
          mv snyk-report.html reports/

      - name: Upload Snyk Report
        uses: actions/upload-artifact@v4
        with:
          name: Snyk-report
          path: ./reports
          #path: ./snyk-report.json

      - name: Run Snyk Monitor for Gradle
        if: github.event_name == 'push'
        run: snyk monitor --all-projects #--severity-threshold=high

      - name: Run Snyk IaC Test
        run: snyk iac test --report
        continue-on-error: true

      - name: Build a Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }}:latest .

      - name: Run Snyk Container Monitor
        run: snyk container monitor ${{ env.IMAGE_NAME }}:latest --file=Dockerfile

      - name: Upload SARIF Report to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif

  docker-scout:
    name: "Security-Docker-Scout-${{ vars.CURRENT_DATE }}"
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Scout Quickview
        id: docker-scout-quickview
        uses: docker/scout-action@0133ff88fe16d4a412dc4827a8fccbccb6b583e0
        with:
          command: quickview
          image: "${{ env.IMAGE_NAME }}:latest"


      - name: Docker Scout CVEs
        id: docker-scout-cves
        uses: docker/scout-action@0133ff88fe16d4a412dc4827a8fccbccb6b583e0
        with:
          command: cves
          image: "${{ env.IMAGE_NAME }}:latest"

      - name: Save Docker Scout Reports
        run: |
          echo "${{ steps.docker-scout-quickview.outputs.quickview }}" > docker-scout-quickview.md
          echo "${{ steps.docker-scout-cves.outputs.cves }}" > docker-scout-cves.md

      - name: Upload Docker Scout Reports
        uses: actions/upload-artifact@v4
        with:
          name: docker-scout-reports
          path: ./docker-scout-*.md

